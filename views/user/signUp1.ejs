<!DOCTYPE html>
<html lang="en" data-bs-theme="auto">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="description" content="" />
    <meta name="generator" content="Hugo 0.111.3" />
    <title>Zia</title>
  <link
      href="https://fonts.googleapis.com/css?family=Lato:300,400,700&display=swap"
      rel="stylesheet"
    />

    <link
      rel="stylesheet"
      href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css"
    />

    <link rel="stylesheet" href="/css/login-css/style.css" />

    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha2/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"
    />
    <link
      rel="stylesheet"
      type="text/css"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"
    />

    <link
      rel="stylesheet"
      type="text/css"
      href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/5.1.3/css/bootstrap.min.css"
    />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css" rel="stylesheet" />
   
  </head>




  
  <body
    style="background-image: url(images/login-images/bg.jpg);"
    >
    <button type="button" onclick="history.back();" class="btn btn-fw ml-5">
      <i class="fas fa-arrow-left" style="color: #ffffff;"></i>
    </button>
    

   
        <div class="container-fluid">
        
          <a class="navbar-brand d-flex justify-content-center">
            <img  src="/images/login-images/loginlogo.png"
                  alt="logo"
                  style="max-width: 100%; max-height: 100%;"/>
          </a>
      
          <div class="collapse navbar-collapse" id="navbarCollapse">
            <ul class="navbar-nav me-auto mb-2 mb-md-0">
             
            </ul>
           
            <ul class="navbar-nav mx-md-3">
            </ul>
          </div>
        </div>
      
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha2/dist/js/bootstrap.bundle.min.js"></script>
  </body>
</html>

<body class="rafcolour">


 


  <div class="container  mt-md-0" >
    <div class="row justify-content-center align-items-center vh-50">
      <div class="col-12 col-md-8 col-lg-6">
        <div class="box p-4">
            <h1 class="signin-heading mb-4 text-center">Sign Up</h1>

          <form id="signup-form"  >

            <input
            type="text"
            class="form-control border border-light"
            style="background-color: transparent;border-radius: 30px;"
            id="fullName"
            name="fullName"
            placeholder="Enter Your Full Name"
          />
          
          
          
          <input
            type="email"
            class="form-control border border-light mt-1"
            style="background-color: transparent;border-radius: 30px; "
            id="email"
            name="email"
            placeholder="name@example.com"
          />
          
          
          
          <input
            type="text"
            class="form-control border border-light mt-1"
            style="background-color: transparent;border-radius: 30px;"
            id="mobile"
            name="mobile"
            placeholder="Enter mobile number"
          />
          
          
          
          <input
            type="password"
            class="form-control border border-light mt-1"
            style="background-color: transparent;border-radius: 30px;"
            id="password"
            name="password"
            placeholder="Password"
          />
          
          
          
          <input
            type="password"
            class="form-control border border-light mt-1"
            style="background-color: transparent;border-radius: 30px;"
            id="confirmPassword"
            name="confirmPassword"
            placeholder="confirm Password"
          />
          


            <div class="d-grid">
                <button type="submit" class="btn btn-signin btn-lg mt-3 custom-btn">
                    Sign Up
                </button>
                <style>
                .custom-btn {
                    
                    background-color: transparent;
                    color: white;
                    width: 200px;
                    transition: all 0.3s ease;
                    display: block;
                    margin-left: auto;
                    margin-right: auto;
                   
                  }
                  
                  .custom-btn:hover {
                    background-color: white;
                    color: black;
                  }
                </style> 
            </div>
          </form>


          <div id="otp-section" class="d-none"  style="display: flex; flex-direction: column; align-items: center;">
            <form style="display: flex; flex-direction: column; align-items: center; margin-bottom: 20px;">
              <h6 style="text-align: center;">OTP</h6>
              <div class="pin-input justify-content-center" style="margin-bottom: 20px;">
                <% for (let i = 1; i <= 6; i++) { %>
                  <input type="text" class="form-control pin-box text-white bg-transparent" id="box<%= i %>" maxlength="1" style="width: 40px; height: 40px; margin-right: 10px;" />
                <% } %>
              </div>
              <button class="btn btn-verify-otp btn-lg" type="button" id="verifyOtp" style="align-self: center; background-color: transparent; color: white; border-color: white;">Verify OTP</button>

            </form>
          
            <style>
              .pin-input {
                display: flex;
                flex-direction: row;
                justify-content: center;
              }
          
              .pin-box {
                width: 40px;
                height: 40px;
                font-size: 20px;
                background-color: transparent;
                border: 2px solid white;
                color: white;
                text-align: center;
                margin-right: 10px;
              }
          
              .pin-box:focus {
                outline: none;
                color: black;
                background-color: white;
              }
            </style>
            <style>
                .btn-verify-otp {
                    background-color: transparent;
                    color: white;
                    border-color: white;
                    transition: all 0.3s ease-in-out;
                    transform: scale(1);
                }
                
                .btn-verify-otp:hover {
                    transform: scale(1.1);
                    cursor: pointer;
                }
            </style>
          
            <div class="d-flex justify-content-between links" style="width: 100%; margin-bottom: 20px;">
              <a onclick="normalSection()" class="text-white" style="margin-left: 20px;">back</a>
              <a onclick="  sendOTP(document.getElementById('mobile').value)" class="text-white" style="margin-right: 20px;">Resend</a>
            </div>
          </div>
          
          </div>
        </div>
      </div>
    </div>
  </div>



</body>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/jquery.validation/1.16.0/jquery.validate.min.js"></script>




<script>
  $(document).ready(function () {
    $.validator.addMethod(
      "noSpecialChars",
      function (value, element) {
        return this.optional(element) || /^(?!\s)[a-zA-Z ]+$/.test(value);
      },
      "Special characters and spaces are not allowed"
    );
    $.validator.addMethod(
      "email",
      function (value, element) {
        return (
          this.optional(element) ||
          /^([a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,})$/.test(value)
        );
      },
      "Please enter a valid email address"
    );
    $.validator.addMethod(
      "number",
      function (value, element) {
        return this.optional(element) || /^(?!0)[0-9]+$/.test(value);
      },
      "numbers only allowed"
    );
    $("#signup-form").validate({
      rules: {
        email: {
          required: true,
          email: true,
        },
        fullName: {
          required: true,
          minlength: 3,
          noSpecialChars: true,
        },
        mobile: {
          required: true,
          maxlength: 10,
          minlength: 10,
          number: true,
        },
        password: {
          required: true,
          minlength: 8,
        },
        confirmPassword: {
          required: true,
          minlength: 8,
          equalTo: "#password",
        },
      },
      messages: {
        email: {
          required: "Please enter your email address",
          email: "Please enter a valid email address",
        },
        fullName: {
          required: "Please enter your full name",
          minlength: "Your name must be at least 3 characters long",
          noSpecialChars: "Special characters and spaces are not allowed",
        },
        mobile: {
          required: "Please enter Mobile Number",
          minlength: "10 digit indian number should be there",
          maxlength: "maximum 10 digit allowed in indian number",
          number: "only numbers allowed",
        },
        password: {
          required: "Please enter a password",
          minlength: "Your password must be at least 8 characters long",
        },
        confirmPassword: {
          required: "Please confirm your password",
          minlength: "Your password must be at least 8 characters long",
          equalTo: "Your passwords do not match",
        },
      },
      highlight: function (element) {
        $(element).closest(".form-floating").addClass("is-invalid");
      },
      unhighlight: function (element) {
        $(element).closest(".form-floating").removeClass("is-invalid");
      },
      errorElement: "div",
      errorClass: "invalid-feedback",
      errorPlacement: function (error, element) {
        if (element.parent(".input-group").length) {
          error.insertAfter(element.parent());
        } else {
          error.insertAfter(element);
        }
      },
    });
  });
</script>
<script>
  const inputs = document.querySelectorAll(".pin-box");

  inputs.forEach((input, index) => {
    input.addEventListener("keydown", (event) => {
      if (event.key >= 0 && event.key <= 9) {
        inputs[index].value = event.key;
        inputs[index].style.background = "#ffffff";
        if (index < inputs.length - 1) {
          inputs[index + 1].style.background = "#ffffff";
          inputs[index + 1].focus();
        }
        event.preventDefault();
      } else if (event.key === "Backspace" && index > 0) {
        inputs[index - 1].focus();
        inputs[index].value = "";
        inputs[index - 1].value = "";
        event.preventDefault();
      }
    });
  });
</script>

<script>
  const signupForm = document.getElementById("signup-form");
  const otpSection = document.getElementById("otp-section");
//   const present = document.getElementById("present");
  signupForm.addEventListener("submit", (event) => {
    event.preventDefault();
    const validator = $("#signup-form").validate();
    if (validator.valid()) {
      const mobileInput = document.getElementById("mobile").value;
      const emailInput = document.getElementById("email").value;

      if (mobileInput && emailInput) {
        checkEmailExists(mobileInput, emailInput);
      } else {
        normalSection();
      }
    }
  });

  async function checkEmailExists(mobile, email) {
    console.log(mobile + email);
    fetch("/emailexists", {
      method: "POST",
      body: JSON.stringify({
        mobile: mobile,
        email: email,
      }),
      headers: {
        "Content-Type": "application/json",
      },
    })
      .then((response) => {
        return response.json(); // get the response body
      })
      .then((data) => {
        if (data.success) {
          sendOTP(mobile);
        } else {
          alert("Email or Mobile already registered");
          normalSection();
        }
      })
      .catch((error) => {
        console.error(error);
        alert("Error verifying email");
      });
  }

  function sendOTP(mobile) {
    fetch("/sendotp", {
      method: "POST",
      body: JSON.stringify({
        mobile: mobile,
      }),
      headers: {
        "Content-Type": "application/json",
      },
    })
      .then((response) => {
        return response.json(); // get the response body
      })
      .then((data) => {
        console.log(data);

        if (data.success) {
          console.log(data);
          showOTPSection();
        } else {
          console.log(data);
          normalSection();
          alert("OTP Not sended. Please try again.");
        }
      })
      .catch((error) => {
        console.error(error);
        alert(
          "An error occurred while sending verifying OTP. Please try again later."
        );
      });
  }

  function showOTPSection() {
    console.log("hai");

    signupForm.classList.add("d-none");
    console.log("hai");

    otpSection.classList.remove("d-none");
    console.log("hai");

    // present.classList.remove("d-none");
    // console.log("hai");
  }
  function normalSection() {
    otpSection.classList.add("d-none");
    signupForm.classList.remove("d-none");
    // present.classList.add("d-none");
  }
  const verifyOTPButton = document.querySelector(".btn-verify-otp");
  verifyOTPButton.addEventListener("click", () => {
    let otp = document.getElementById("box1").value;
    otp += document.getElementById("box2").value;
    otp += document.getElementById("box3").value;
    otp += document.getElementById("box4").value;
    otp += document.getElementById("box5").value;
    otp += document.getElementById("box6").value;
    console.log(otp);
    if (verifyOTP(otp)) {
      console.log("hai");
    } else {
      alert("Invalid OTP!");
    }
  });
  async function verifyOTP(otp) {
    var processing = "Please Wait";
    $("#verifyOtp").text(processing).css("cursor", "None");
    console.log(otp);
    try {
      const response = await fetch("/verifyotp", {
        method: "POST",
        body: JSON.stringify({
          userOtp: otp,
        }),
        headers: {
          "Content-Type": "application/json",
        },
      });

      const data = await response.json();

      console.log(data);

      if (data.success) {
        console.log(data);
        // OTP verification successful, move to the signinUser()
        signinUser();
        // document.querySelector('form').submit();
      } else {
        console.log(data);
        // OTP verification failed, display an error message
        alert("Invalid OTP!");
        var processing = "Verify OTP";
        $("#verifyOtp").text(processing).css("cursor", "Pointer");
        showOTPSection();
      }
    } catch (error) {
      console.error(error);
      alert("An error occurred while verifying OTP. Please try again later.");
    }
  }

  function signinUser() {
    const email = document.getElementById("email").value;
    const fullName = document.getElementById("fullName").value;
    const mobile = document.getElementById("mobile").value;
    const password = document.getElementById("password").value;
    fetch("/signup", {
      method: "POST",
      body: JSON.stringify({
        email: email,
        name: fullName,
        mobile: mobile,
        password: password,
      }),
      headers: {
        "Content-Type": "application/json",
      },
    })
      .then((response) => {
        if (response.ok) {
          window.location.href = "/login";
        } else {
          alert("An error occurred. Please try again later.");
        }
      })
      .catch((error) => {
        console.error(error);
        alert("An error occurred. Please try again later.");
      });
  }
</script>